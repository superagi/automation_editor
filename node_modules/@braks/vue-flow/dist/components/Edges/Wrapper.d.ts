import type { VNode } from 'vue'
declare const Wrapper: import('vue').DefineComponent<
  Readonly<{
    id?: any
    type?: any
    selected?: any
    label?: any
    data?: any
    events?: any
    sourceNode?: any
    targetNode?: any
    style?: any
    sourceHandleId?: any
    targetHandleId?: any
    source?: any
    target?: any
    labelStyle?: any
    labelShowBg?: any
    labelBgStyle?: any
    labelBgPadding?: any
    labelBgBorderRadius?: any
    animated?: any
    updatable?: any
    markerStart?: any
    markerEnd?: any
    selectable?: any
    connectionMode?: any
    edgeUpdaterRadius?: any
    name?: any
    updating?: any
  }>,
  () => VNode<
    import('vue').RendererNode,
    import('vue').RendererElement,
    {
      [key: string]: any
    }
  > | null,
  unknown,
  {},
  {},
  import('vue').ComponentOptionsMixin,
  import('vue').ComponentOptionsMixin,
  ('source-mousedown' | 'target-mousedown')[],
  'source-mousedown' | 'target-mousedown',
  import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps,
  Readonly<
    import('vue').ExtractPropTypes<
      Readonly<{
        id?: any
        type?: any
        selected?: any
        label?: any
        data?: any
        events?: any
        sourceNode?: any
        targetNode?: any
        style?: any
        sourceHandleId?: any
        targetHandleId?: any
        source?: any
        target?: any
        labelStyle?: any
        labelShowBg?: any
        labelBgStyle?: any
        labelBgPadding?: any
        labelBgBorderRadius?: any
        animated?: any
        updatable?: any
        markerStart?: any
        markerEnd?: any
        selectable?: any
        connectionMode?: any
        edgeUpdaterRadius?: any
        name?: any
        updating?: any
      }>
    >
  > & {
    'onSource-mousedown'?: ((...args: any[]) => any) | undefined
    'onTarget-mousedown'?: ((...args: any[]) => any) | undefined
  },
  {
    readonly id?: any
    readonly type?: any
    readonly selected?: any
    readonly label?: any
    readonly data?: any
    readonly events?: any
    readonly sourceNode?: any
    readonly targetNode?: any
    readonly style?: any
    readonly sourceHandleId?: any
    readonly targetHandleId?: any
    readonly source?: any
    readonly target?: any
    readonly labelStyle?: any
    readonly labelShowBg?: any
    readonly labelBgStyle?: any
    readonly labelBgPadding?: any
    readonly labelBgBorderRadius?: any
    readonly animated?: any
    readonly updatable?: any
    readonly markerStart?: any
    readonly markerEnd?: any
    readonly selectable?: any
    readonly connectionMode?: any
    readonly edgeUpdaterRadius?: any
    readonly name?: any
    readonly updating?: any
  }
>
export default Wrapper
